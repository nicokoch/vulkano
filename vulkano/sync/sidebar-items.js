initSidebarItems({"enum":[["SharingMode","Declares in which queue(s) a resource can be used.When you create a buffer or an image, you have to tell the Vulkan library in which queue families it will be used. The vulkano library requires you to tell in which queue famiily the resource will be used, even for exclusive mode."]],"struct":[["Event","Used to block the GPU execution until an event on the CPU occurs.Note that Vulkan implementations may have limits on how long a command buffer will wait for an event to be signaled, in order to avoid interfering with progress of other clients of the GPU. If the event isn't signaled within these limits, results are undefined and may include device loss."],["Fence","A fence is used to know when a command buffer submission has finished its execution.When a command buffer accesses a ressource, you have to ensure that the CPU doesn't access the same ressource simultaneously (except for concurrent reads). Therefore in order to know when the CPU can access a ressource again, a fence has to be used."],["Semaphore","Used to provide synchronization between command buffers during their execution.It is similar to a fence, except that it is purely on the GPU side. The CPU can't query a semaphore's status or wait for it to be signaled."]],"trait":[["Resource","Base trait for objects that can be used as resources and must be synchronized."]]});